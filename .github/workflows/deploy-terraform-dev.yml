name: Development - Terraform Deployment
run-name: Build number ${{ github.run_id }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy
        options:
        - dev
        default: dev
      infrapath:
        description: 'Path to the infrastructure code'
        type: string
        default: 'none'

env:
  BUILD_NUMBER: ${{ github.run_id }}

jobs:
  workflow-info:
    name: 'Workflow Information'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Environment Selection
      run: echo "User @${{ github.actor }} deploying to ${{ github.event.inputs.environment }}"
    
    - name: Build Number
      run: echo "Build number ${{ github.run_id }}"

    - name: Run my script
      run: |
        if [ -d "/infrastructure/dev/${{ github.event.inputs.infrapath }}" ]; then
          echo "Path /infrastructure/dev/${{ github.event.inputs.infrapath }} exist""
        else
          echo "!!! Path /infrastructure/dev/${{ github.event.inputs.infrapath }} does not exist !!!"
          echo "Please use one of the following subfolders as path:"
          ls -l infrastructure/dev
          exit 1
        fi
    
  path-check:
    name: 'Workflow Information'
    runs-on: ubuntu-latest
    needs: [workflow-info]
    if: github.event.inputs.infrapath != 'none'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Subscription
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account show

    - name: List folders in current directory
      run: |
        pwd
        ls

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: [workflow-info, path-check]
    environment: dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 'Terraform Install'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.9.0"

    - name: Terraform Version
      run: terraform version

    - name: Terraform Init
      run: |
        cd infrastructure/dev/${{ github.event.inputs.infrapath }}
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID_DEV }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET_DEV }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID_DEV }}
        terraform init \
        -upgrade \
        -backend-config="resource_group_name=rg-rbcz-tfstateaicoe-dev-weu-001" \
        -backend-config="storage_account_name=statninfradev001" \
        -backend-config="container_name=infradev001" \
        -backend-config="key=${{ github.event.inputs.infrapath }}/terraform.tfstate"

    - name: Terraform Plan
      run: |
        cd infrastructure/dev/${{ github.event.inputs.infrapath }}
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID_DEV }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET_DEV }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID_DEV }}
        terraform plan -out=tfplan