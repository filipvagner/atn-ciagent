name: Test Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy
        options: 
        - Dev
        - Test
        - Prod

jobs:
  job1:
    name: 'Job 1'
    runs-on: ubuntu-latest

    steps:
    - name: Send greeting
      run: echo "User @${{ github.actor }} deploying to ${{ github.event.inputs.environment }}"

    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Subscription
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account show

    - name: List folders in current directory
      run: |
        pwd
        ls

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 'Terraform Install'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.9.0"

    - name: Terraform Version
      run: terraform version

    - name: Terraform Init
      run: |
        cd infrastructure
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID_DEV }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET_DEV }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID_DEV }}
        terraform init \
        -upgrade \
        -backend-config="resource_group_name=rg-learntfstate-001" \
        -backend-config="storage_account_name=stlearntfstate001" \
        -backend-config="container_name=gh-atn-dev" \
        -backend-config="key=terraform.tfstate"

    - name: Terraform Plan
      run: |
        cd infrastructure
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID_DEV }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET_DEV }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID_DEV }}
        terraform plan -out=tfplan